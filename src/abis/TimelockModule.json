{
  "address": "0x6dd531E494dF868312F7e592cA09cD9E326630b4",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "TransferCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "TransferExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransferScheduled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "escrow",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancellable",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "hashOperation",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "escrow",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancellable",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "schedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3e004d71f583c713deedc885498786f68dda6750fd13e175458c549a80a0113f",
  "receipt": {
    "to": null,
    "from": "0xb143be4248e3bD5c0330f8AaAE34E7966A083E29",
    "contractAddress": "0x1153Ab72935601D4c5D2D515d7fDeDF361bC652D",
    "transactionIndex": 39,
    "gasUsed": "1063659",
    "logsBloom": "0x
    "blockHash": "0x0e2874706bcaa61f40ac3f8898d1e7b4e7ba0862be373350277e0429feb823f1",
    "transactionHash": "0x3e004d71f583c713deedc885498786f68dda6750fd13e175458c549a80a0113f",
    "logs": [
      {
        "transactionIndex": 39,
        "blockNumber": 57825891,
        "transactionHash": "0x3e004d71f583c713deedc885498786f68dda6750fd13e175458c549a80a0113f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b143be4248e3bd5c0330f8aaae34e7966a083e29",
          "0x000000000000000000000000794e44d1334a56fea7f4df12633b88820d0c5888"
        ],
        "data": "0x000000000000000000000000000000000000000000000000007a65d58c00c48000000000000000000000000000000000000000000000000037e92e30c6dd8832000000000000000000000000000000000000000000000182950702d9be8d42d0000000000000000000000000000000000000000000000000376ec85b3adcc3b2000000000000000000000000000000000000000000000182958168af4a8e0750",
        "logIndex": 182,
        "blockHash": "0x0e2874706bcaa61f40ac3f8898d1e7b4e7ba0862be373350277e0429feb823f1"
      }
    ],
    "blockNumber": 57825891,
    "cumulativeGasUsed": "4950486",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b0a4d6b8c764f87c3193c61f9cc752fe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"TransferCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"TransferExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransferScheduled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"escrow\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancellable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"hashOperation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"escrow\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancellable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"schedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TimelockModule.sol\":\"TimelockModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Enum.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity =0.8.18;\\n\\n/// @title Enum - Collection of enums\\n/// @author Richard Meissner - <richard@gnosis.pm>\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\",\"keccak256\":\"0xabe0259851f6a16c4bda0ecb83404b935d7ab0fb0ea81c96d575a046aa81ba4c\",\"license\":\"LGPL-3.0-only\"},\"contracts/TimelockModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.18;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {Enum} from \\\"./Enum.sol\\\";\\n\\ninterface GnosisSafe {\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external returns (bool success);\\n}\\n\\ncontract TimelockModule {\\n    string public constant NAME = \\\"Timelock Module\\\";\\n    string public constant VERSION = \\\"0.1.0\\\";\\n\\n    event TransferScheduled(\\n        bytes32 indexed id,\\n        address indexed safe,\\n        uint256 timestamp\\n    );\\n    event TransferExecuted(bytes32 indexed id, address indexed safe);\\n    event TransferCancelled(bytes32 indexed id, address indexed safe);\\n\\n    struct TransferItem {\\n        address token;\\n        address[] recipients;\\n        uint256[] values;\\n        uint256 timestamp;\\n        bool escrow;\\n        bool cancellable;\\n        bool executed;\\n        bool canceled;\\n    }\\n\\n    mapping(address => mapping(bytes32 => TransferItem)) private _scheduled;\\n\\n    function hashOperation(\\n        address safe,\\n        address token,\\n        address[] calldata recipients,\\n        uint256[] calldata values,\\n        uint256 timestamp,\\n        bool escrow,\\n        bool cancellable,\\n        bytes32 salt\\n    ) public pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    safe,\\n                    token,\\n                    recipients,\\n                    values,\\n                    timestamp,\\n                    escrow,\\n                    cancellable,\\n                    salt\\n                )\\n            );\\n    }\\n\\n    function schedule(\\n        address token,\\n        address[] calldata recipients,\\n        uint256[] calldata values,\\n        uint256 timestamp,\\n        bool escrow,\\n        bool cancellable,\\n        bytes32 salt\\n    ) public {\\n        require(timestamp > block.timestamp, \\\"Invalid timestamp\\\");\\n        require(recipients.length == values.length, \\\"Length mismatch\\\");\\n        bytes32 id = hashOperation(\\n            msg.sender,\\n            token,\\n            recipients,\\n            values,\\n            timestamp,\\n            escrow,\\n            cancellable,\\n            salt\\n        );\\n        require(_scheduled[msg.sender][id].timestamp == 0, \\\"Item existed\\\");\\n        emit TransferScheduled(id, msg.sender, timestamp);\\n        if (escrow) {\\n            _escrow(GnosisSafe(msg.sender), token, values);\\n        }\\n        _scheduled[msg.sender][id] = TransferItem(\\n            token,\\n            recipients,\\n            values,\\n            timestamp,\\n            escrow,\\n            cancellable,\\n            false,\\n            false\\n        );\\n    }\\n\\n    function execute(address safe, bytes32 id) public {\\n        TransferItem storage item = _scheduled[safe][id];\\n        require(item.timestamp > 0, \\\"Item not found\\\");\\n        require(!item.executed, \\\"Item executed\\\");\\n        require(!item.canceled, \\\"Item canceled\\\");\\n        require(item.timestamp <= block.timestamp, \\\"Too early\\\");\\n        emit TransferExecuted(id, msg.sender);\\n        if (!item.escrow) {\\n            _escrow(GnosisSafe(safe), item.token, item.values);\\n        }\\n        if (item.token == address(0)) {\\n            for (uint256 i = 0; i < item.recipients.length; i++)\\n                payable(item.recipients[i]).transfer(item.values[i]);\\n        } else {\\n            IERC20 token = IERC20(item.token);\\n            for (uint256 i = 0; i < item.recipients.length; i++)\\n                require(token.transfer(item.recipients[i], item.values[i]));\\n        }\\n        item.executed = true;\\n    }\\n\\n    function cancel(bytes32 id) public {\\n        TransferItem storage item = _scheduled[msg.sender][id];\\n        require(item.timestamp > 0, \\\"Item not found\\\");\\n        require(!item.executed, \\\"Item executed\\\");\\n        require(!item.canceled, \\\"Item canceled\\\");\\n        require(item.cancellable, \\\"Item not cancellable\\\");\\n        emit TransferCancelled(id, msg.sender);\\n        item.canceled = true;\\n    }\\n\\n    function _escrow(\\n        GnosisSafe safe,\\n        address token,\\n        uint256[] memory values\\n    ) internal {\\n        uint256 amount = 0;\\n        for (uint256 i = 0; i < values.length; i++) {\\n            amount += values[i];\\n        }\\n        if (token == address(0)) {\\n            uint256 oldBalance = address(this).balance;\\n            require(\\n                safe.execTransactionFromModule(\\n                    address(this),\\n                    amount,\\n                    \\\"\\\",\\n                    Enum.Operation.Call\\n                ),\\n                \\\"Could not execute ether transfer\\\"\\n            );\\n            uint256 newBalance = address(this).balance;\\n            require(newBalance == oldBalance + amount);\\n        } else {\\n            uint256 oldBalance = IERC20(token).balanceOf(address(this));\\n            bytes memory data = abi.encodeWithSignature(\\n                \\\"transfer(address,uint256)\\\",\\n                address(this),\\n                amount\\n            );\\n            require(\\n                safe.execTransactionFromModule(\\n                    token,\\n                    0,\\n                    data,\\n                    Enum.Operation.Call\\n                ),\\n                \\\"Could not execute token transfer\\\"\\n            );\\n            uint256 newBalance = IERC20(token).balanceOf(address(this));\\n            require(newBalance == oldBalance + amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x66b0b970e8ecd8429571f8c220f2721444be1d97d1ec8662395731a482d46f96\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611248806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636673bff6146100675780639edd8c741461007c578063a3f4df7e1461008f578063c4d252f5146100d3578063def50d27146100e6578063ffa1ad7414610107575b600080fd5b61007a610075366004610e11565b61012b565b005b61007a61008a366004610eca565b610434565b6100bd6040518060400160405280600f81526020016e54696d656c6f636b204d6f64756c6560881b81525081565b6040516100ca9190610f3a565b60405180910390f35b61007a6100e1366004610f54565b6107e2565b6100f96100f4366004610f6d565b610967565b6040519081526020016100ca565b6100bd604051806040016040528060058152602001640302e312e360dc1b81525081565b4284116101735760405162461bcd60e51b81526020600482015260116024820152700496e76616c69642074696d657374616d7607c1b60448201526064015b60405180910390fd5b8685146101b45760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161016a565b60006101c8338b8b8b8b8b8b8b8b8b610967565b33600090815260208181526040808320848452909152902060030154909150156102235760405162461bcd60e51b815260206004820152600c60248201526b125d195b48195e1a5cdd195960a21b604482015260640161016a565b604051858152339082907fc83cfb0af049967145bc802625240ef0f62d7d3e537511da281c4d06c36b02229060200160405180910390a3831561029e5761029e338b8989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109b292505050565b6040518061010001604052808b6001600160a01b031681526020018a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208a810282810182019093528a82529283019290918b918b9182918501908490808284376000920182905250938552505050602080830189905287151560408085019190915287151560608501526080840183905260a09093018290523382528181528282208583528152919020825181546001600160a01b0319166001600160a01b03909116178155828201518051919261039892600185019290910190610ce3565b50604082015180516103b4916002840191602090910190610d48565b506060820151600382015560808201516004909101805460a084015160c085015160e09095015161ffff1990921693151561ff00191693909317610100931515939093029290921763ffff00001916620100009315159390930263ff00000019169290921763010000009115159190910217905550505050505050505050565b6001600160a01b038216600090815260208181526040808320848452909152902060038101546104975760405162461bcd60e51b815260206004820152600e60248201526d125d195b481b9bdd08199bdd5b9960921b604482015260640161016a565b600481015462010000900460ff16156104e25760405162461bcd60e51b815260206004820152600d60248201526c125d195b48195e1958dd5d1959609a1b604482015260640161016a565b60048101546301000000900460ff161561052e5760405162461bcd60e51b815260206004820152600d60248201526c125d195b4818d85b98d95b1959609a1b604482015260640161016a565b428160030154111561056e5760405162461bcd60e51b8152602060048201526009602482015268546f6f206561726c7960b81b604482015260640161016a565b604051339083907f9dc31a4ea4a02e674abbe06620f541360e032c6c662c006e8a73b6cc082fc8ec90600090a3600481015460ff16610612578054600282018054604080516020808402820181019092528281526106129488946001600160a01b0390911693919290919083018282801561060857602002820191906000526020600020905b8154815260200190600101908083116105f4575b50505050506109b2565b80546001600160a01b03166106c75760005b60018201548110156106c15781600101818154811061064557610645611038565b6000918252602090912001546002830180546001600160a01b03909216916108fc91908490811061067857610678611038565b90600052602060002001549081150290604051600060405180830381858888f193505050501580156106ae573d6000803e3d6000fd5b50806106b981611064565b915050610624565b506107cc565b80546001600160a01b031660005b60018301548110156107c957816001600160a01b031663a9059cbb84600101838154811061070557610705611038565b6000918252602090912001546002860180546001600160a01b03909216918590811061073357610733611038565b6000918252602090912001546040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae919061107d565b6107b757600080fd5b806107c181611064565b9150506106d5565b50505b600401805462ff00001916620100001790555050565b336000908152602081815260408083208484529091529020600381015461083c5760405162461bcd60e51b815260206004820152600e60248201526d125d195b481b9bdd08199bdd5b9960921b604482015260640161016a565b600481015462010000900460ff16156108875760405162461bcd60e51b815260206004820152600d60248201526c125d195b48195e1958dd5d1959609a1b604482015260640161016a565b60048101546301000000900460ff16156108d35760405162461bcd60e51b815260206004820152600d60248201526c125d195b4818d85b98d95b1959609a1b604482015260640161016a565b6004810154610100900460ff166109235760405162461bcd60e51b81526020600482015260146024820152734974656d206e6f742063616e63656c6c61626c6560601b604482015260640161016a565b604051339083907f1ed784ea0b4551753ccb1bbf1711421d8a07aff605d39bb9d770c25943aea48590600090a3600401805463ff0000001916630100000017905550565b60008a8a8a8a8a8a8a8a8a8a60405160200161098c9a999897969594939291906110cc565b6040516020818303038152906040528051906020012090509a9950505050505050505050565b6000805b82518110156109f8578281815181106109d1576109d1611038565b6020026020010151826109e4919061116d565b9150806109f081611064565b9150506109b6565b506001600160a01b038316610ae65760405163468721a760e01b815247906001600160a01b0386169063468721a790610a3a90309086906000906004016111a8565b6020604051808303816000875af1158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d919061107d565b610ac95760405162461bcd60e51b815260206004820181905260248201527f436f756c64206e6f742065786563757465206574686572207472616e73666572604482015260640161016a565b47610ad4838361116d565b8114610adf57600080fd5b5050610cdd565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5191906111e3565b6040513060248201526044810184905290915060009060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b1790525163468721a760e01b81529091506001600160a01b0387169063468721a790610bc8908890600090869082906004016111fc565b6020604051808303816000875af1158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b919061107d565b610c575760405162461bcd60e51b815260206004820181905260248201527f436f756c64206e6f74206578656375746520746f6b656e207472616e73666572604482015260640161016a565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc291906111e3565b9050610cce848461116d565b8114610cd957600080fd5b5050505b50505050565b828054828255906000526020600020908101928215610d38579160200282015b82811115610d3857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610d03565b50610d44929150610d83565b5090565b828054828255906000526020600020908101928215610d38579160200282015b82811115610d38578251825591602001919060010190610d68565b5b80821115610d445760008155600101610d84565b80356001600160a01b0381168114610daf57600080fd5b919050565b60008083601f840112610dc657600080fd5b50813567ffffffffffffffff811115610dde57600080fd5b6020830191508360208260051b8501011115610df957600080fd5b9250929050565b8015158114610e0e57600080fd5b50565b600080600080600080600080600060e08a8c031215610e2f57600080fd5b610e388a610d98565b985060208a013567ffffffffffffffff80821115610e5557600080fd5b610e618d838e01610db4565b909a50985060408c0135915080821115610e7a57600080fd5b50610e878c828d01610db4565b90975095505060608a0135935060808a0135610ea281610e00565b925060a08a0135610eb281610e00565b8092505060c08a013590509295985092959850929598565b60008060408385031215610edd57600080fd5b610ee683610d98565b946020939093013593505050565b6000815180845260005b81811015610f1a57602081850181015186830182015201610efe565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f4d6020830184610ef4565b9392505050565b600060208284031215610f6657600080fd5b5035919050565b6000806000806000806000806000806101008b8d031215610f8d57600080fd5b610f968b610d98565b9950610fa460208c01610d98565b985060408b013567ffffffffffffffff80821115610fc157600080fd5b610fcd8e838f01610db4565b909a50985060608d0135915080821115610fe657600080fd5b50610ff38d828e01610db4565b90975095505060808b0135935060a08b013561100e81610e00565b925060c08b013561101e81610e00565b8092505060e08b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110765761107661104e565b5060010190565b60006020828403121561108f57600080fd5b8151610f4d81610e00565b81835260006001600160fb1b038311156110b357600080fd5b8260051b80836020870137939093016020019392505050565b6001600160a01b038b811682528a81166020808401919091526101006040840181905283018a90526000916101208401918c9190845b8d811015611127578261111485610d98565b1685529381019392810192600101611102565b50505050828103606084015261113e81898b61109a565b91505085608083015261115560a083018615159052565b92151560c082015260e0015298975050505050505050565b808201808211156111805761118061104e565b92915050565b600281106111a457634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03841681526020810183905260806040820181905260009082015260a081016111db6060830184611186565b949350505050565b6000602082840312156111f557600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006112236080830185610ef4565b90506112326060830184611186565b9594505050505056fea164736f6c6343000812000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80636673bff6146100675780639edd8c741461007c578063a3f4df7e1461008f578063c4d252f5146100d3578063def50d27146100e6578063ffa1ad7414610107575b600080fd5b61007a610075366004610e11565b61012b565b005b61007a61008a366004610eca565b610434565b6100bd6040518060400160405280600f81526020016e54696d656c6f636b204d6f64756c6560881b81525081565b6040516100ca9190610f3a565b60405180910390f35b61007a6100e1366004610f54565b6107e2565b6100f96100f4366004610f6d565b610967565b6040519081526020016100ca565b6100bd604051806040016040528060058152602001640302e312e360dc1b81525081565b4284116101735760405162461bcd60e51b81526020600482015260116024820152700496e76616c69642074696d657374616d7607c1b60448201526064015b60405180910390fd5b8685146101b45760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161016a565b60006101c8338b8b8b8b8b8b8b8b8b610967565b33600090815260208181526040808320848452909152902060030154909150156102235760405162461bcd60e51b815260206004820152600c60248201526b125d195b48195e1a5cdd195960a21b604482015260640161016a565b604051858152339082907fc83cfb0af049967145bc802625240ef0f62d7d3e537511da281c4d06c36b02229060200160405180910390a3831561029e5761029e338b8989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109b292505050565b6040518061010001604052808b6001600160a01b031681526020018a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208a810282810182019093528a82529283019290918b918b9182918501908490808284376000920182905250938552505050602080830189905287151560408085019190915287151560608501526080840183905260a09093018290523382528181528282208583528152919020825181546001600160a01b0319166001600160a01b03909116178155828201518051919261039892600185019290910190610ce3565b50604082015180516103b4916002840191602090910190610d48565b506060820151600382015560808201516004909101805460a084015160c085015160e09095015161ffff1990921693151561ff00191693909317610100931515939093029290921763ffff00001916620100009315159390930263ff00000019169290921763010000009115159190910217905550505050505050505050565b6001600160a01b038216600090815260208181526040808320848452909152902060038101546104975760405162461bcd60e51b815260206004820152600e60248201526d125d195b481b9bdd08199bdd5b9960921b604482015260640161016a565b600481015462010000900460ff16156104e25760405162461bcd60e51b815260206004820152600d60248201526c125d195b48195e1958dd5d1959609a1b604482015260640161016a565b60048101546301000000900460ff161561052e5760405162461bcd60e51b815260206004820152600d60248201526c125d195b4818d85b98d95b1959609a1b604482015260640161016a565b428160030154111561056e5760405162461bcd60e51b8152602060048201526009602482015268546f6f206561726c7960b81b604482015260640161016a565b604051339083907f9dc31a4ea4a02e674abbe06620f541360e032c6c662c006e8a73b6cc082fc8ec90600090a3600481015460ff16610612578054600282018054604080516020808402820181019092528281526106129488946001600160a01b0390911693919290919083018282801561060857602002820191906000526020600020905b8154815260200190600101908083116105f4575b50505050506109b2565b80546001600160a01b03166106c75760005b60018201548110156106c15781600101818154811061064557610645611038565b6000918252602090912001546002830180546001600160a01b03909216916108fc91908490811061067857610678611038565b90600052602060002001549081150290604051600060405180830381858888f193505050501580156106ae573d6000803e3d6000fd5b50806106b981611064565b915050610624565b506107cc565b80546001600160a01b031660005b60018301548110156107c957816001600160a01b031663a9059cbb84600101838154811061070557610705611038565b6000918252602090912001546002860180546001600160a01b03909216918590811061073357610733611038565b6000918252602090912001546040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae919061107d565b6107b757600080fd5b806107c181611064565b9150506106d5565b50505b600401805462ff00001916620100001790555050565b336000908152602081815260408083208484529091529020600381015461083c5760405162461bcd60e51b815260206004820152600e60248201526d125d195b481b9bdd08199bdd5b9960921b604482015260640161016a565b600481015462010000900460ff16156108875760405162461bcd60e51b815260206004820152600d60248201526c125d195b48195e1958dd5d1959609a1b604482015260640161016a565b60048101546301000000900460ff16156108d35760405162461bcd60e51b815260206004820152600d60248201526c125d195b4818d85b98d95b1959609a1b604482015260640161016a565b6004810154610100900460ff166109235760405162461bcd60e51b81526020600482015260146024820152734974656d206e6f742063616e63656c6c61626c6560601b604482015260640161016a565b604051339083907f1ed784ea0b4551753ccb1bbf1711421d8a07aff605d39bb9d770c25943aea48590600090a3600401805463ff0000001916630100000017905550565b60008a8a8a8a8a8a8a8a8a8a60405160200161098c9a999897969594939291906110cc565b6040516020818303038152906040528051906020012090509a9950505050505050505050565b6000805b82518110156109f8578281815181106109d1576109d1611038565b6020026020010151826109e4919061116d565b9150806109f081611064565b9150506109b6565b506001600160a01b038316610ae65760405163468721a760e01b815247906001600160a01b0386169063468721a790610a3a90309086906000906004016111a8565b6020604051808303816000875af1158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d919061107d565b610ac95760405162461bcd60e51b815260206004820181905260248201527f436f756c64206e6f742065786563757465206574686572207472616e73666572604482015260640161016a565b47610ad4838361116d565b8114610adf57600080fd5b5050610cdd565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5191906111e3565b6040513060248201526044810184905290915060009060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b1790525163468721a760e01b81529091506001600160a01b0387169063468721a790610bc8908890600090869082906004016111fc565b6020604051808303816000875af1158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b919061107d565b610c575760405162461bcd60e51b815260206004820181905260248201527f436f756c64206e6f74206578656375746520746f6b656e207472616e73666572604482015260640161016a565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc291906111e3565b9050610cce848461116d565b8114610cd957600080fd5b5050505b50505050565b828054828255906000526020600020908101928215610d38579160200282015b82811115610d3857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610d03565b50610d44929150610d83565b5090565b828054828255906000526020600020908101928215610d38579160200282015b82811115610d38578251825591602001919060010190610d68565b5b80821115610d445760008155600101610d84565b80356001600160a01b0381168114610daf57600080fd5b919050565b60008083601f840112610dc657600080fd5b50813567ffffffffffffffff811115610dde57600080fd5b6020830191508360208260051b8501011115610df957600080fd5b9250929050565b8015158114610e0e57600080fd5b50565b600080600080600080600080600060e08a8c031215610e2f57600080fd5b610e388a610d98565b985060208a013567ffffffffffffffff80821115610e5557600080fd5b610e618d838e01610db4565b909a50985060408c0135915080821115610e7a57600080fd5b50610e878c828d01610db4565b90975095505060608a0135935060808a0135610ea281610e00565b925060a08a0135610eb281610e00565b8092505060c08a013590509295985092959850929598565b60008060408385031215610edd57600080fd5b610ee683610d98565b946020939093013593505050565b6000815180845260005b81811015610f1a57602081850181015186830182015201610efe565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f4d6020830184610ef4565b9392505050565b600060208284031215610f6657600080fd5b5035919050565b6000806000806000806000806000806101008b8d031215610f8d57600080fd5b610f968b610d98565b9950610fa460208c01610d98565b985060408b013567ffffffffffffffff80821115610fc157600080fd5b610fcd8e838f01610db4565b909a50985060608d0135915080821115610fe657600080fd5b50610ff38d828e01610db4565b90975095505060808b0135935060a08b013561100e81610e00565b925060c08b013561101e81610e00565b8092505060e08b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110765761107661104e565b5060010190565b60006020828403121561108f57600080fd5b8151610f4d81610e00565b81835260006001600160fb1b038311156110b357600080fd5b8260051b80836020870137939093016020019392505050565b6001600160a01b038b811682528a81166020808401919091526101006040840181905283018a90526000916101208401918c9190845b8d811015611127578261111485610d98565b1685529381019392810192600101611102565b50505050828103606084015261113e81898b61109a565b91505085608083015261115560a083018615159052565b92151560c082015260e0015298975050505050505050565b808201808211156111805761118061104e565b92915050565b600281106111a457634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03841681526020810183905260806040820181905260009082015260a081016111db6060830184611186565b949350505050565b6000602082840312156111f557600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006112236080830185610ef4565b90506112326060830184611186565b9594505050505056fea164736f6c6343000812000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 706,
        "contract": "contracts/TimelockModule.sol:TimelockModule",
        "label": "_scheduled",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(TransferItem)699_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_struct(TransferItem)699_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => struct TimelockModule.TransferItem))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(TransferItem)699_storage)"
      },
      "t_mapping(t_bytes32,t_struct(TransferItem)699_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct TimelockModule.TransferItem)",
        "numberOfBytes": "32",
        "value": "t_struct(TransferItem)699_storage"
      },
      "t_struct(TransferItem)699_storage": {
        "encoding": "inplace",
        "label": "struct TimelockModule.TransferItem",
        "members": [
          {
            "astId": 682,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 685,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "recipients",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 688,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "values",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 690,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 692,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "escrow",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 694,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "cancellable",
            "offset": 1,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 696,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "executed",
            "offset": 2,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 698,
            "contract": "contracts/TimelockModule.sol:TimelockModule",
            "label": "canceled",
            "offset": 3,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
